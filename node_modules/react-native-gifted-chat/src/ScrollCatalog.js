import React, {
  Component
} from 'react';
import ReactNative, {
  Text,
  ListView,
  TouchableOpacity,
  View,
  SafeAreaView,
  Image,
  Platform,
  ScrollView,
  StatusBar,
  TouchableWithoutFeedback, InlineImage, Dimensions, StyleSheet,
} from 'react-native';
import PropTypes from 'prop-types';
import Carousel, { Pagination } from 'react-native-snap-carousel';
import { sliderWidth, itemWidth } from './styles/SliderEntry.style';
import SliderEntry from './components/SliderEntry';
import styles, { colors } from './styles/index.style';
import { ENTRIES1, ENTRIES2 } from './static/entries';
import { scrollInterpolators, animatedStyles } from './utils/animations';
import { ParallaxImage } from 'react-native-snap-carousel';
import { navigation } from 'react-navigation';


/*<Carousel
data={entries}
renderItem={this._renderItem}
sliderWidth={sliderWidth}
itemWidth={itemWidth}
inactiveSlideScale={0.95}
inactiveSlideOpacity={1}
enableMomentum={true}
activeSlideAlignment={'start'}
containerCustomStyle={styles.slider}
contentContainerCustomStyle={styles.sliderContentContainer}
activeAnimationType={'spring'}
activeAnimationOptions={{
  friction: 4,
  tension: 40
}}
/>*/
class ScrollCatalog extends Component {

  onPressChild(item) {
      this.props.onPress(item);
  }

	_renderItem ({item, index}) {
	    return <SliderEntry data={item} even={(index + 1) % 2 === 0}/>;
	}

    _renderItemWithParallax ({item, index}, parallaxProps) {
      const IS_IOS = Platform.OS === 'ios';
        const { width: viewportWidth, height: viewportHeight } = Dimensions.get('window');

        function wp (percentage) {
            const value = (percentage * viewportWidth) / 100;
            return Math.round(value);
        }

        const slideHeight = viewportHeight * 0.4;
        const slideWidth = wp(72);
        const itemHorizontalMargin = wp(0.17);

        const sliderWidth = viewportWidth;
        const itemWidth = slideWidth + itemHorizontalMargin * 0.00000002;

        const entryBorderRadius = 8;
        return (
          <TouchableOpacity
              activeOpacity={1}
              style={{
                width: itemWidth,
                height: slideHeight,
                paddingHorizontal: itemHorizontalMargin,
                paddingBottom: 10
              }}
              onPress={() => this.props.navigation.navigate('Product')}
              >
                <View style={{
                    position: 'absolute',
                    top: 0,
                    left: itemHorizontalMargin,
                    right: itemHorizontalMargin,
                    bottom: 18,
                    shadowColor: '#1a1917',
                    shadowOpacity: 0.25,
                    shadowOffset: { width: 0, height: 10 },
                    shadowRadius: 10,
                    borderRadius: entryBorderRadius
                }} />
                <View style={{
                    flex: 1,
                    marginBottom: IS_IOS ? 0 : -1, // Prevent a random Android rendering issue
                    backgroundColor: 'white',
                    borderTopLeftRadius: entryBorderRadius,
                    borderTopRightRadius: entryBorderRadius,
                    borderWidth: StyleSheet.hairlineWidth,
                    borderColor: '#eba43b'
                }} >
                     <ParallaxImage
                        source={item.illustration}
                        containerStyle={{flex: 1,
                          marginBottom: IS_IOS ? 0 : -1, // Prevent a random Android rendering issue
                          backgroundColor: 'white',
                          borderTopLeftRadius: entryBorderRadius,
                          borderTopRightRadius: entryBorderRadius,
                          borderWidth: StyleSheet.hairlineWidth,
                          borderColor: '#eba43b'}}
                        style={{...StyleSheet.absoluteFillObject,
                          resizeMode: 'cover',
                          borderRadius: IS_IOS ? entryBorderRadius : 0,
                          borderTopLeftRadius: entryBorderRadius,
                          borderTopRightRadius: entryBorderRadius}}
                          parallaxFactor={0}
                        showSpinner={true}
                        spinnerColor={'rgba(0, 0, 0, 0.25)'}
                        {...parallaxProps}
                      />
                    <View style={{
                        position: 'absolute',
                        bottom: 0,
                        left: 0,
                        right: 0,
                        height: entryBorderRadius,
                        backgroundColor: 'white'
                    }} />
                </View>
                <View style={{
                    justifyContent: 'center',
                    paddingTop: 15 - entryBorderRadius,
                    paddingBottom: 10,
                    paddingHorizontal: 16,
                    backgroundColor: 'white',
                    borderLeftWidth: StyleSheet.hairlineWidth,
                    borderBottomWidth: StyleSheet.hairlineWidth,
                    borderRightWidth: StyleSheet.hairlineWidth,
                    borderColor: '#eba43b'}}>
                    <Text
                      style={
                        {
                            color: '#1a1917',
                            fontSize: 13,
                            fontWeight: 'bold',
                            letterSpacing: 0.5
                        }
                      }
                      numberOfLines={2}
                    >
                        {item.title}
                    </Text>
                    <Text
                      style={{
                        marginTop: 6,
                        color: '#888888',
                        fontSize: 12,
                      }}
                      numberOfLines={2}
                    >
                        {item.subtitle}{'                               '}
                    <Image style={{height: 14, width: 60}}
                        source={require('/Users/catherinepricillas/Chatbot/shared/static/five-stars.png')}
                      />
                    </Text>
                  
                </View>
                <View style={{
                    justifyContent: 'center',
                    paddingTop: 15 - entryBorderRadius,
                    paddingBottom: 10,
                    paddingHorizontal: 16,
                    backgroundColor: 'white',
                    borderLeftWidth: StyleSheet.hairlineWidth,
                    borderBottomWidth: StyleSheet.hairlineWidth,
                    borderRightWidth: StyleSheet.hairlineWidth,
                    borderColor: '#eba43b'}}>
                    <TouchableWithoutFeedback>
                    <TouchableOpacity onPress={() => { alert(`Hai`); }}>
                    <Text style={{textAlign: 'center', color: '#eba43b'}}>
                        Lihat Detail Produk
                    </Text>
                    </TouchableOpacity>
                    </TouchableWithoutFeedback>
                </View>
                <View style={{justifyContent: 'center',
                    paddingTop: 15 - entryBorderRadius,
                    paddingBottom: 10,
                    paddingHorizontal: 16,
                    backgroundColor: 'white',
                    borderLeftWidth: StyleSheet.hairlineWidth,
                    borderBottomWidth: StyleSheet.hairlineWidth,
                    borderRightWidth: StyleSheet.hairlineWidth,
                    borderColor: '#eba43b'}}>
                    <TouchableWithoutFeedback>
                    <TouchableOpacity onPress={()=>this.onPressChild({item})}>
                    <Text style={{textAlign: 'center', color: '#eba43b'}}>
                        Produk Serupa
                    </Text>
                    </TouchableOpacity>
                    </TouchableWithoutFeedback>
                </View>
                <View style={{
                justifyContent: 'center',
                paddingTop: 15 - entryBorderRadius,
                paddingBottom: 10,
                paddingHorizontal: 16,
                backgroundColor: 'white',
                borderBottomLeftRadius: entryBorderRadius,
                borderBottomRightRadius: entryBorderRadius,
                borderLeftWidth: StyleSheet.hairlineWidth,
                borderBottomWidth: StyleSheet.hairlineWidth,
                borderRightWidth: StyleSheet.hairlineWidth,
                borderColor: '#eba43b'}}>
                    <TouchableWithoutFeedback>
                    <TouchableOpacity onPress={() => { alert(`Hai`); }}>
                    <Text style={{textAlign: 'center', color: '#eba43b'}}>
                        Beli Produk
                    </Text>
                    </TouchableOpacity>
                    </TouchableWithoutFeedback>
                </View>
            </TouchableOpacity>
        );
    }

    render () {
    if (this.props.isCatalog === true) {
        const number = 0;
        const entries = this.props.entries;
        const { slider1ActiveSlide } = this.props.slider1ActiveSlide;
        return (
            <SafeAreaView style={styles.safeArea}>
                <View style={styles.container}>
                    <StatusBar
                      translucent={true}
                      backgroundColor={'rgba(0, 0, 0, 0.3)'}
                      barStyle={'light-content'}
                    />
                    <ScrollView
                      style={styles.scrollview}
                      scrollEventThrottle={200}
                      directionalLockEnabled={true}
                    >
                      <View style={styles.exampleContainer}>
                        <Carousel
                          ref={c => this._slider1Ref = c}
                          data={entries}
                          renderItem={this._renderItemWithParallax.bind(this)}
                          sliderWidth={sliderWidth}
                          itemWidth={itemWidth}
                          hasParallaxImages={true}
                          firstItem={0}
                          inactiveSlideScale={0.94}
                          inactiveSlideOpacity={0.7}
                          // inactiveSlideShift={20}
                          containerCustomStyle={styles.slider}
                          contentContainerCustomStyle={styles.sliderContentContainer}
                          loop={false}
                          loopClonesPerSide={2}
                          autoplay={false}
                          onSnapToItem={(index) => this.setState({ slider1ActiveSlide: index }) }
                        />
                      </View>
                    </ScrollView>
                </View>
            </SafeAreaView>
        );
    }
    return null;
	}
}


ScrollCatalog.propTypes = {
  entries: PropTypes.array.isRequired,
  slider1ActiveSlide: PropTypes.number.isRequired,
  onPress: PropTypes.func.isRequired,
  onPressChild: PropTypes.func.isRequired,
  onPressParent1: PropTypes.func.isRequired,
  isCatalogChild1: PropTypes.bool,
  onCatalog: PropTypes.func,
}

ScrollCatalog.defaultProps = {
  slider1ActiveSlide: 0,
  isCatalog: false,
}

module.exports = ScrollCatalog;
